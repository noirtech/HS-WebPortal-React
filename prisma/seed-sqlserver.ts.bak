import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('🌱 Starting database seeding for SQL Server...')

  try {
    // Clear existing data first
    console.log('🧹 Clearing existing data...')
    await prisma.payment.deleteMany()
    await prisma.invoice.deleteMany()
    await prisma.contract.deleteMany()
    await prisma.booking.deleteMany()
    await prisma.workOrder.deleteMany()
    await prisma.boat.deleteMany()
    await prisma.berth.deleteMany()
    await prisma.owner.deleteMany()
    await prisma.userRole.deleteMany()
    await prisma.user.deleteMany()
    await prisma.marina.deleteMany()
    await prisma.marinaGroup.deleteMany()

    console.log('✅ Data cleared successfully')

    // Create Marina Group
    console.log('🏗️ Creating Marina Group...')
    const marinaGroup = await prisma.marinaGroup.create({
      data: {
        id: 'marina-group-1',
        name: 'Harbor View Marina Group',
        description: 'Premium marina management group serving the coastal community'
      }
    })
    console.log('✅ Marina Group created:', marinaGroup.name)

    // Create Marina
    console.log('🏗️ Creating Marina...')
    const marina = await prisma.marina.create({
      data: {
        id: 'marina-1',
        name: 'Harbor View Marina',
        code: 'HVM001',
        address: '123 Harbor Drive, Coastal City, CA 90210',
        phone: '+1 (555) 123-4567',
        email: 'info@harborviewmarina.com',
        timezone: 'America/Los_Angeles',
        isActive: true,
        isOnline: true,
        marinaGroupId: marinaGroup.id
      }
    })
    console.log('✅ Marina created:', marina.name)

    // Create Demo User
    console.log('👤 Creating Demo User...')
    const user = await prisma.user.create({
      data: {
        id: 'user-1',
        email: 'demo@marina.com',
        firstName: 'John',
        lastName: 'Doe',
        phone: '+1 (555) 987-6543',
        isActive: true,
        marinaId: marina.id,
        marinaGroupId: marinaGroup.id
      }
    })
    console.log('✅ Demo User created:', user.email)

    // Create User Roles
    console.log('🔐 Creating User Roles...')
    await prisma.userRole.create({
      data: {
        id: 'role-1',
        userId: user.id,
        role: 'MARINA_ADMIN',
        marinaId: marina.id
      }
    })

    await prisma.userRole.create({
      data: {
        id: 'role-2',
        userId: user.id,
        role: 'SUPER_ADMIN',
        marinaId: marina.id
      }
    })
    console.log('✅ User Roles created')

    // Create Demo Owners
    console.log('👥 Creating Demo Owners...')
    const owner1 = await prisma.owner.create({
      data: {
        id: 'owner-1',
        externalId: 'EXT001',
        firstName: 'John',
        lastName: 'Smith',
        email: 'john.smith@email.com',
        phone: '+1 (555) 111-2222',
        address: '456 Ocean Blvd, Beach City, CA 90211',
        isActive: true,
        marinaId: marina.id
      }
    })

    const owner2 = await prisma.owner.create({
      data: {
        id: 'owner-2',
        externalId: 'EXT002',
        firstName: 'Sarah',
        lastName: 'Johnson',
        email: 'sarah.johnson@email.com',
        phone: '+1 (555) 333-4444',
        address: '789 Seaside Ave, Ocean Town, CA 90212',
        isActive: true,
        marinaId: marina.id
      }
    })
    console.log('✅ Demo Owners created')

    // Create Demo Boats
    console.log('🚤 Creating Demo Boats...')
    const boat1 = await prisma.boat.create({
      data: {
        id: 'boat-1',
        externalId: 'BOAT001',
        name: 'Ocean Explorer',
        registration: 'CA1234AB',
        length: 32.5,
        beam: 12.0,
        draft: 4.2,
        isActive: true,
        marinaId: marina.id,
        ownerId: owner1.id
      }
    })

    const boat2 = await prisma.boat.create({
      data: {
        id: 'boat-2',
        externalId: 'BOAT002',
        name: 'Sea Breeze',
        registration: 'CA5678CD',
        length: 28.0,
        beam: 10.5,
        draft: 3.8,
        isActive: true,
        marinaId: marina.id,
        ownerId: owner2.id
      }
    })
    console.log('✅ Demo Boats created')

    // Create Demo Berths
    console.log('⚓ Creating Demo Berths...')
    const berth1 = await prisma.berth.create({
      data: {
        id: 'berth-1',
        externalId: 'BERTH001',
        berthNumber: 'A1',
        length: 35.0,
        beam: 15.0,
        isAvailable: true,
        isActive: true,
        marinaId: marina.id
      }
    })

    const berth2 = await prisma.berth.create({
      data: {
        id: 'berth-2',
        externalId: 'BERTH002',
        berthNumber: 'A2',
        length: 30.0,
        beam: 12.0,
        isAvailable: true,
        isActive: true,
        marinaId: marina.id
      }
    })
    console.log('✅ Demo Berths created')

    // Create Demo Contract
    console.log('📋 Creating Demo Contract...')
    const contract = await prisma.contract.create({
      data: {
        id: 'contract-1',
        externalId: 'CONTRACT001',
        contractNumber: 'CON-2024-001',
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-12-31'),
        status: 'ACTIVE',
        monthlyRate: 850.00,
        marinaId: marina.id,
        ownerId: owner1.id,
        boatId: boat1.id,
        berthId: berth1.id
      }
    })
    console.log('✅ Demo Contract created')

    // Create Demo Invoice
    console.log('🧾 Creating Demo Invoice...')
    const invoice = await prisma.invoice.create({
      data: {
        id: 'invoice-1',
        externalId: 'INV001',
        invoiceNumber: 'INV-2024-001',
        issueDate: new Date('2024-01-01'),
        dueDate: new Date('2024-01-31'),
        status: 'UNPAID',
        subtotal: 850.00,
        tax: 68.00,
        total: 918.00,
        description: 'Monthly berth rental - January 2024',
        marinaId: marina.id,
        ownerId: owner1.id,
        contractId: contract.id
      }
    })
    console.log('✅ Demo Invoice created')

    // Create Demo Work Order
    console.log('🔧 Creating Demo Work Order...')
    await prisma.workOrder.create({
      data: {
        id: 'workorder-1',
        externalId: 'WO001',
        title: 'Engine Maintenance',
        description: 'Annual engine service and oil change',
        status: 'OPEN',
        priority: 'MEDIUM',
        requestedDate: new Date('2024-01-15'),
        marinaId: marina.id,
        ownerId: owner1.id,
        boatId: boat1.id
      }
    })
    console.log('✅ Demo Work Order created')

    console.log('🎉 Database seeding completed successfully!')
    console.log('📊 Created:')
    console.log(`   - 1 Marina Group`)
    console.log(`   - 1 Marina`)
    console.log(`   - 1 User (demo@marina.com)`)
    console.log(`   - 2 User Roles`)
    console.log(`   - 2 Owners`)
    console.log(`   - 2 Boats`)
    console.log(`   - 2 Berths`)
    console.log(`   - 1 Contract`)
    console.log(`   - 1 Invoice`)
    console.log(`   - 1 Work Order`)

  } catch (error) {
    console.error('❌ Error during seeding:', error)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

main()
  .catch((e) => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
